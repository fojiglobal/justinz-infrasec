# This is a basic workflow to help you get started with Actions

name: Provision Terraform

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
defaults:
  run:
    shell: bash
    working-directory: "./staging/us-east-2"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ## job 1 Terraform apply
  tfplan:
    # if: github.event_name == 'pull_request'
    ## Only Run tfplan when a PR is open

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        #continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

  terraform-snyk-scan:
    needs: tfplan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Scan Terraform Code for Security Misconfigurations. Resolve All Critical and High before Merging to main.
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: "./staging/us-east-2"
          args: --severity-threshold=high
  # job 2 Terraform apply
  tfapply:
    needs: terraform-snyk-scan # use build after successful
    # The type of runner that the job will run on
    environment:
      name: aws-mgmt
    runs-on:
      ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init
      # Runs a single command using the runners shell
      - name: Deploy Terraform
        run: terraform apply --auto-approve
